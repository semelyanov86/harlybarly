<?php

header("Content-Type: application/javascript");
error_reporting(1 | 4);
echo "/**\r\n* @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\r\n* For licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\nCKEDITOR.editorConfig = function (config) {\r\n// Define changes to default configuration here. For example:\r\n// config.language = 'en';\r\n// config.uiColor = '#AADC6E';\r\nconfig.skin = 'office2013';\r\nconfig.title = false;\r\n//config.autoParagraph = false;\r\n//config.fillEmptyBlocks = false;\r\n//config.enterMode = CKEDITOR.ENTER_BR;\r\n//config.shiftEnterMode = CKEDITOR.ENTER_P;\r\n//config.resize_enabled = true;\r\nconfig.toolbarCanCollapse = true;\r\nconfig.allowedContent = true;\r\n// config.extraPlugins = 'sharedspace';\r\n//config.removePlugins = 'magicline,scayt,menubutton,contextmenu';\r\n\r\nconfig.toolbar = [\r\n{name: 'document', items: ['Source']},\r\n{\r\nname: 'clipboard',\r\ngroups: ['clipboard', 'undo'],\r\nitems: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\r\n},\r\n{\r\nname: 'editing',\r\ngroups: ['find', 'selection', 'spellchecker'],\r\nitems: ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt']\r\n},\r\n{\r\nname: 'paragraph',\r\ngroups: ['list', 'indent', 'blocks', 'align', 'bidi'],\r\nitems: ['Blockquote', 'CreateDiv', '-', 'BidiLtr', 'BidiRtl']\r\n},\r\n{name: 'links', items: ['Link', 'Unlink', 'Anchor']},\r\n{name: 'insert', items: ['Image', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak']},\r\n{name: 'about', items: ['About']},\r\n'/',\r\n{name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize']},\r\n{\r\nname: 'basicstyles',\r\ngroups: ['basicstyles', 'cleanup'],\r\nitems: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent']\r\n},\r\n\r\n{name: 'colors', items: ['TextColor', 'BGColor']},\r\n{name: 'tools', items: ['Maximize', 'ShowBlocks']},\r\n{name: 'others', items: ['-']}\r\n];\r\n\r\n//config.extraAllowedContent = 'p(*)[*]{*};div(*)[*]{*};li(*)[*]{*};ul(*)[*]{*}';\r\n//CKEDITOR.dtd.\$removeEmpty.i = 0;\r\n//CKEDITOR.dtd.\$removeEmpty['i'] = false\r\nconfig.protectedSource.push(/<code>[\\s\\S]*?<\\/code>/gi); // Code tags\r\n\r\n    // Integrate KCfinder (vtiger core) to CKEditor\r\n    /** @link http://kcfinder.sunhater.com/integrate */\r\n    config.filebrowserBrowseUrl = 'kcfinder/browse.php?opener=ckeditor&type=files';\r\n    config.filebrowserImageBrowseUrl = 'kcfinder/browse.php?opener=ckeditor&type=images';\r\n    config.filebrowserFlashBrowseUrl = 'kcfinder/browse.php?opener=ckeditor&type=flash';\r\n    config.filebrowserUploadUrl = 'kcfinder/upload.php?opener=ckeditor&type=files';\r\n    config.filebrowserImageUploadUrl = 'kcfinder/upload.php?opener=ckeditor&type=images';\r\n    config.filebrowserFlashUploadUrl = 'kcfinder/upload.php?opener=ckeditor&type=flash';\r\n    ";
if ($handle = opendir("../../../../../../../../test/QuotingTool/resources/font")) {
    $font = "";
    while (false !== ($entry = readdir($handle))) {
        if ($entry != "." && $entry != "..") {
            $fileSplit = explode(".", $entry);
            list($nameFont, $fileType) = $fileSplit;
            echo "config.font_names += ';'+ '" . $nameFont . "/" . $nameFont . "';";
        }
    }
    closedir($handle);
}
echo "    // Add custom fonts\r\n    if (typeof mpdf != 'undefined') {\r\n    if (mpdf && mpdf.CKEditorConfig && mpdf.CKEditorConfig.custom_fonts) {\r\n    // Define changes to default configuration here:\r\n    if (mpdf.CKEditorConfig.custom_fonts.contentsCss) {\r\n    /**\r\n    * Check if a variable is a string\r\n    * @link http://stackoverflow.com/questions/4059147/check-if-a-variable-is-a-string#answer-9436948\r\n    */\r\n    if (typeof config.contentsCss === 'string' || config.contentsCss instanceof String) {\r\n    config.contentsCss = [config.contentsCss];\r\n    }\r\n\r\n    config.contentsCss = config.contentsCss.concat(mpdf.CKEditorConfig.custom_fonts.contentsCss);\r\n    }\r\n\r\n    //the next line add the new font to the combobox in CKEditor\r\n    //config.font_names = '<Cutsom Font Name>/<YourFontName>;' + config.font_names;\r\n            if (mpdf.CKEditorConfig.custom_fonts.font_names) {\r\n            config.font_names += ';' + mpdf.CKEditorConfig.custom_fonts.font_names;\r\n            }\r\n            }\r\n            }\r\n\r\n            };\r\n\r\n            /**\r\n            * Custom default dialog values\r\n            * @link http://docs.cksource.com/CKEditor_3.x/Howto/Default_Field_Values\r\n            */\r\n            CKEDITOR.on('dialogDefinition', function (ev) {\r\n            // Take the dialog name and its definition from the event data.\r\n            var dialogName = ev.data.name;\r\n            var dialogDefinition = ev.data.definition;\r\n\r\n            // Get a reference to the \"Info\" tab.\r\n            var infoTab = dialogDefinition.getContents('info');\r\n\r\n            // Check if the definition is from the dialog window you are interested in (the \"Link\" dialog window).\r\n            if (dialogName == 'link') {\r\n            // Set the default value for the URL field.\r\n            var url = infoTab.get('url');\r\n            url['default'] = 'www.example.com';\r\n            } else if (dialogName == 'image') {\r\n            //var txtWidth = infoTab.get('txtWidth');\r\n            //txtWidth['default'] = contentWidth;\r\n            var txtHSpace = infoTab.get('txtHSpace');\r\n            txtHSpace['default'] = 10;\r\n            var txtVSpace = infoTab.get('txtVSpace');\r\n            txtVSpace['default'] = 2;\r\n            } else if (dialogName == 'table') {\r\n            // Default value\r\n            var txtWidth = infoTab.get('txtWidth');\r\n            txtWidth['default'] = '100%';\r\n            var txtCellSpace = infoTab.get('txtCellSpace');\r\n            txtCellSpace['default'] = '0';\r\n            var txtCellPad = infoTab.get('txtCellPad');\r\n            txtCellPad['default'] = '0';\r\n\r\n            // Customize properties\r\n            for (var i in dialogDefinition.contents) {\r\n            if (!dialogDefinition.contents.hasOwnProperty(i)) {\r\n            continue;\r\n            }\r\n\r\n            var contents = dialogDefinition.contents[i];\r\n            if (contents.id == \"info\") {\r\n            var eLength = contents.elements.length;\r\n            contents.elements.splice(eLength, 0, {\r\n            type: 'checkbox',\r\n            id: 'info_header',\r\n            label: 'Show headers'\r\n            });\r\n            }\r\n            }\r\n            }\r\n            });\r\n";

?>